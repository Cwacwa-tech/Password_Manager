{"version":3,"file":"content.js","mappings":"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","sources":["webpack://browser-extension/./src/common.ts","webpack://browser-extension/./src/credentials_utils.ts","webpack://browser-extension/./src/popup_utils.ts","webpack://browser-extension/webpack/bootstrap","webpack://browser-extension/./src/content.ts"],"sourcesContent":["export function setBadgeText(enabled: boolean) {\n    const text = enabled ? \"ON\" : \"OFF\"\n    void chrome.action.setBadgeText({text: text})\n}\n\n// Function to simulate user input, ensuring frameworks (React, Vue) detect changes\nexport function simulateUserInput(input: HTMLInputElement, value: string) {\n    // Skip if input is disabled or readonly\n    if (input.disabled || input.readOnly) return;\n    \n    const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\")?.set;\n    if (nativeInputValueSetter) {\n        nativeInputValueSetter.call(input, value); // Set input value programmatically\n    } else {\n        // Fallback if the setter is not available\n        input.value = value;\n    }\n\n    // Dispatch multiple events for maximum compatibility with different frameworks\n    const events = ['input', 'change', 'keydown', 'keyup'];\n    \n    events.forEach(eventType => {\n        let event;\n        if (eventType === 'keydown' || eventType === 'keyup') {\n            // For key events, create a KeyboardEvent\n            event = new KeyboardEvent(eventType, {\n                bubbles: true,\n                cancelable: true,\n                key: 'L' // First letter of \"LOVE\"\n            });\n        } else {\n            // For other events, use regular Event\n            event = new Event(eventType, { bubbles: true });\n        }\n        input.dispatchEvent(event);\n    });\n    \n    // Some frameworks might use focus/blur events as well\n    input.focus();\n    setTimeout(() => {\n        input.blur();\n    }, 100);\n}","import {simulateUserInput} from './common'\n\n// Function to collect credentials from the form\nexport function collectCredentials(form: HTMLElement) {\n    // Get hostname for site identification\n    const site = window.location.hostname;\n    \n    // Find password field\n    const passwordInput = form.querySelector('input[type=\"password\"]') as HTMLInputElement;\n    const password = passwordInput ? passwordInput.value : '';\n    \n    // Find username/email field using similar logic to your existing code\n    let username = '';\n    const userIdentifierSelectors = [\n        'input[type=\"email\"]', \n        'input[name*=\"email\" i]', \n        'input[id*=\"email\" i]',\n        'input[type=\"text\"][name*=\"user\" i]', \n        'input[id*=\"user\" i]',\n        'input[name*=\"login\" i]', \n        'input[id*=\"login\" i]'\n        // Add other selectors as needed\n    ];\n    \n    for (const selector of userIdentifierSelectors) {\n        const input = form.querySelector(selector) as HTMLInputElement;\n        if (input && input.value) {\n            username = input.value;\n            break;\n        }\n    }\n    \n    return {\n        site,\n        username,\n        password,\n        timestamp: new Date().toISOString()\n    };\n}\n\n// Function to autofill credentials\nexport function autofillCredentials(form: HTMLElement, username: string, password: string) {\n    // Find password field\n    const passwordInput = form.querySelector('input[type=\"password\"]') as HTMLInputElement;\n    if (passwordInput) {\n        simulateUserInput(passwordInput, password);\n    }\n\n    // Find username/email field using similar logic to your existing code\n    const userIdentifierSelectors = [\n        'input[type=\"email\"]', \n        'input[name*=\"email\" i]', \n        'input[id*=\"email\" i]',\n        'input[type=\"text\"][name*=\"user\" i]', \n        'input[id*=\"user\" i]',\n        'input[name*=\"login\" i]', \n        'input[id*=\"login\" i]'\n    ];\n\n    for (const selector of userIdentifierSelectors) {\n        const input = form.querySelector(selector) as HTMLInputElement;\n        if (input) {\n        simulateUserInput(input, username);\n        break;\n        }\n    }\n}","// Import any necessary functions that weren't included in your snippet\n// For example, we need the collectCredentials function\nimport { collectCredentials, autofillCredentials } from './credentials_utils'; // Adjust the import path as needed\nimport { simulateUserInput } from './common'; // Adjust the import path as needed\n\n/**\n * Shows a confirmation popup to save credentials\n * @param form The HTML form element containing credentials\n * @param callback Function to call after user makes a decision\n */\nexport function showConfirmationPopup(form: HTMLElement, callback: (confirmed: boolean) => void) {\n    // Get credentials first so we can display them\n    const credentials = collectCredentials(form);\n    \n    // Create popup container\n    const popup = document.createElement('div');\n    popup.style.position = 'fixed';\n    popup.style.top = '50%';\n    popup.style.left = '50%';\n    popup.style.transform = 'translate(-50%, -50%)';\n    popup.style.backgroundColor = 'white';\n    popup.style.padding = '20px';\n    popup.style.borderRadius = '5px';\n    popup.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.3)';\n    popup.style.zIndex = '9999';\n    popup.style.display = 'flex';\n    popup.style.flexDirection = 'column';\n    popup.style.alignItems = 'center';\n    popup.style.minWidth = '300px';\n    popup.style.position = 'relative'; // Need this for absolute positioning of close button\n    \n    // Create close button (X)\n    const closeButton = document.createElement('div');\n    closeButton.textContent = '✕';\n    closeButton.style.position = 'absolute';\n    closeButton.style.top = '10px';\n    closeButton.style.right = '10px';\n    closeButton.style.cursor = 'pointer';\n    closeButton.style.fontSize = '18px'; // Increased font size\n    closeButton.style.fontWeight = 'bold';\n    closeButton.style.color = '#000'; // Darker color by default\n    closeButton.style.backgroundColor = '#f0f0f0'; // Light background\n    closeButton.style.borderRadius = '50%'; // Make it circular\n    closeButton.style.width = '22px';\n    closeButton.style.height = '22px';\n    closeButton.style.display = 'flex';\n    closeButton.style.justifyContent = 'center';\n    closeButton.style.alignItems = 'center';\n    closeButton.style.lineHeight = '1'; // Proper vertical alignment\n    closeButton.style.transition = 'all 0.2s ease';\n    popup.appendChild(closeButton);\n    \n    // Add hover effect for close button\n    closeButton.addEventListener('mouseover', () => {\n        closeButton.style.color = '#000';\n    });\n    \n    closeButton.addEventListener('mouseout', () => {\n        closeButton.style.color = '#555';\n    });\n    \n    // Function to close popup and resume website functionality\n    const closePopupAndResume = (confirmed: boolean) => {\n        if (document.body.contains(popup)) {\n            document.body.removeChild(popup);\n        }\n        \n        // Call the callback to resume website functionality\n        callback(confirmed);\n    };\n    \n    // Close button click handler\n    closeButton.addEventListener('click', () => {\n        closePopupAndResume(false);\n    });\n    \n    // Create title\n    const title = document.createElement('h3');\n    title.textContent = 'Save Credentials?';\n    title.style.marginBottom = '15px';\n    title.style.fontSize = '18px';\n    title.style.fontWeight = 'bold';\n    popup.appendChild(title);\n    \n    // Create credentials display container\n    const credentialsContainer = document.createElement('div');\n    credentialsContainer.style.width = '100%';\n    credentialsContainer.style.marginBottom = '20px';\n    credentialsContainer.style.padding = '10px';\n    credentialsContainer.style.backgroundColor = '#f5f5f5';\n    credentialsContainer.style.borderRadius = '4px';\n    credentialsContainer.style.border = '1px solid #ddd';\n    popup.appendChild(credentialsContainer);\n    \n    // Website/domain\n    const siteInfo = document.createElement('div');\n    siteInfo.style.marginBottom = '8px';\n    siteInfo.style.fontSize = '14px';\n    siteInfo.innerHTML = `<strong>Site:</strong> ${credentials.site}`;\n    credentialsContainer.appendChild(siteInfo);\n    \n    // Username/email\n    const usernameInfo = document.createElement('div');\n    usernameInfo.style.marginBottom = '8px';\n    usernameInfo.style.fontSize = '14px';\n    usernameInfo.innerHTML = `<strong>Username:</strong> ${credentials.username || '[empty]'}`;\n    credentialsContainer.appendChild(usernameInfo);\n    \n    // Password (masked) - now showing full length\n    const passwordInfo = document.createElement('div');\n    passwordInfo.style.fontSize = '14px';\n    passwordInfo.innerHTML = `<strong>Password:</strong> ${'•'.repeat(credentials.password.length)}`;\n    credentialsContainer.appendChild(passwordInfo);\n    \n    // Create button container\n    const buttonContainer = document.createElement('div');\n    buttonContainer.style.display = 'flex';\n    buttonContainer.style.gap = '10px';\n    popup.appendChild(buttonContainer);\n    \n    // Create status message area (initially hidden)\n    const statusMessage = document.createElement('div');\n    statusMessage.style.marginTop = '10px';\n    statusMessage.style.padding = '5px';\n    statusMessage.style.borderRadius = '4px';\n    statusMessage.style.fontSize = '14px';\n    statusMessage.style.textAlign = 'center';\n    statusMessage.style.display = 'none';  // Initially hidden\n    popup.appendChild(statusMessage);\n    \n    // Create Yes button\n    const yesButton = document.createElement('button');\n    yesButton.textContent = 'Yes';\n    yesButton.style.padding = '8px 16px';\n    yesButton.style.backgroundColor = '#4CAF50';\n    yesButton.style.border = '2px solid #000000'; // Adding a black border\n    yesButton.style.borderRadius = '4px';\n    yesButton.style.color = 'white';\n    yesButton.style.cursor = 'pointer';\n    yesButton.style.transition = 'all 0.2s ease'; // Smooth transition for effects\n    buttonContainer.appendChild(yesButton);\n    \n    // Create No button\n    const noButton = document.createElement('button');\n    noButton.textContent = 'No';\n    noButton.style.padding = '8px 16px';\n    noButton.style.backgroundColor = '#f44336';\n    noButton.style.border = '2px solid #000000'; // Adding a black border\n    noButton.style.borderRadius = '4px';\n    noButton.style.color = 'white';\n    noButton.style.cursor = 'pointer';\n    noButton.style.transition = 'all 0.2s ease'; // Smooth transition for effects\n    buttonContainer.appendChild(noButton);\n    \n    // Add visual feedback for button clicks\n    yesButton.addEventListener('mousedown', () => {\n        yesButton.style.backgroundColor = '#3B8C3E'; // Darker green when clicked\n        yesButton.style.transform = 'scale(0.95)'; // Slight shrink effect\n    });\n    \n    noButton.addEventListener('mousedown', () => {\n        noButton.style.backgroundColor = '#D32F2F'; // Darker red when clicked\n        noButton.style.transform = 'scale(0.95)'; // Slight shrink effect\n    });\n    \n    // Add hover effects for better UX\n    yesButton.addEventListener('mouseover', () => {\n        yesButton.style.backgroundColor = '#45A049';\n    });\n    \n    yesButton.addEventListener('mouseout', () => {\n        yesButton.style.backgroundColor = '#4CAF50';\n        yesButton.style.transform = 'scale(1)'; // Reset any transform\n    });\n    \n    noButton.addEventListener('mouseover', () => {\n        noButton.style.backgroundColor = '#E53935';\n    });\n    \n    noButton.addEventListener('mouseout', () => {\n        noButton.style.backgroundColor = '#f44336';\n        noButton.style.transform = 'scale(1)'; // Reset any transform\n    });\n    \n    // Handle Yes button click\n    yesButton.addEventListener('click', () => {\n        // Disable buttons to prevent multiple clicks\n        yesButton.disabled = true;\n        noButton.disabled = true;\n        closeButton.style.pointerEvents = 'none'; // Disable close button during processing\n        \n        // Send to background script - we already collected the credentials\n        chrome.runtime.sendMessage({\n            action: 'saveCredentials',\n            data: credentials\n        }, (response) => {\n            console.log('Credentials saved status:', response);\n            \n            if (response.success) {\n                // Check if this was a duplicate\n                if (response.message === 'Password already saved!') {\n                    // Show duplicate message\n                    statusMessage.textContent = 'This password was already saved!';\n                    statusMessage.style.backgroundColor = '#FFF3CD';\n                    statusMessage.style.color = '#856404';\n                    statusMessage.style.border = '1px solid #FFEEBA';\n                    statusMessage.style.display = 'block';\n                    \n                    // Auto-close after 1.5 seconds\n                    setTimeout(() => {\n                        closePopupAndResume(true);\n                    }, 1500);\n                } else {\n                    // Success message\n                    statusMessage.textContent = 'Credentials saved successfully!';\n                    statusMessage.style.backgroundColor = '#D4EDDA';\n                    statusMessage.style.color = '#155724';\n                    statusMessage.style.border = '1px solid #C3E6CB';\n                    statusMessage.style.display = 'block';\n                    \n                    // Auto-close after 1.5 seconds\n                    setTimeout(() => {\n                        closePopupAndResume(true);\n                    }, 1500);\n                }\n            } else {\n                // Error message\n                statusMessage.textContent = 'Failed to save credentials.';\n                statusMessage.style.backgroundColor = '#F8D7DA';\n                statusMessage.style.color = '#721C24';\n                statusMessage.style.border = '1px solid #F5C6CB';\n                statusMessage.style.display = 'block';\n                \n                // Auto-close after 1.5 seconds\n                setTimeout(() => {\n                        closePopupAndResume(false);\n                }, 1500);\n            }\n        });\n    });\n    \n    noButton.addEventListener('click', () => {\n        closePopupAndResume(false);\n    });\n    \n    // Add popup to page\n    document.body.appendChild(popup);\n}\n\n/**\n * Shows a password suggestion popup with an auto-fill option\n * @param passwordField The password input field to suggest a password for\n */\nexport function showPasswordSuggestionPopup(passwordField: HTMLInputElement) {\n    // Get generated password from backend\n    chrome.runtime.sendMessage(\n      { action: \"generate_password\" },\n      (response) => {\n        if (!response?.password) {\n          console.error(\"Failed to generate password:\", response?.error);\n          return;\n        }\n        \n        const generatedPassword = response.password;\n        \n        // Create popup container\n        const popup = document.createElement('div');\n        popup.style.position = 'absolute';\n        popup.style.top = `${passwordField.getBoundingClientRect().bottom + window.scrollY + 5}px`;\n        popup.style.left = `${passwordField.getBoundingClientRect().left + window.scrollX}px`;\n        popup.style.backgroundColor = 'white';\n        popup.style.padding = '15px';\n        popup.style.borderRadius = '5px';\n        popup.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.3)';\n        popup.style.zIndex = '9999';\n        popup.style.display = 'flex';\n        popup.style.flexDirection = 'column';\n        popup.style.minWidth = '250px';\n        \n        // Create title\n        const title = document.createElement('h4');\n        title.textContent = 'Suggested Password';\n        title.style.marginTop = '0';\n        title.style.marginBottom = '10px';\n        title.style.fontSize = '16px';\n        title.style.fontWeight = 'bold';\n        popup.appendChild(title);\n        \n        // Create close button\n        const closeButton = document.createElement('button');\n        closeButton.textContent = '✕';\n        closeButton.style.position = 'absolute';\n        closeButton.style.top = '5px';\n        closeButton.style.right = '5px';\n        closeButton.style.backgroundColor = 'transparent';\n        closeButton.style.border = 'none';\n        closeButton.style.fontSize = '16px';\n        closeButton.style.cursor = 'pointer';\n        closeButton.onclick = () => document.body.removeChild(popup);\n        popup.appendChild(closeButton);\n        \n        // Password display box\n        const passwordBox = document.createElement('div');\n        passwordBox.style.padding = '8px';\n        passwordBox.style.backgroundColor = '#f5f5f5';\n        passwordBox.style.borderRadius = '4px';\n        passwordBox.style.border = '1px solid #ddd';\n        passwordBox.style.marginBottom = '10px';\n        passwordBox.style.fontFamily = 'monospace';\n        passwordBox.style.wordBreak = 'break-all';\n        passwordBox.textContent = generatedPassword;\n        popup.appendChild(passwordBox);\n        \n        // Auto-fill button\n        const fillButton = document.createElement('button');\n        fillButton.textContent = 'Auto-fill';\n        fillButton.style.padding = '8px';\n        fillButton.style.backgroundColor = '#4285F4';\n        fillButton.style.border = 'none';\n        fillButton.style.borderRadius = '4px';\n        fillButton.style.color = 'white';\n        fillButton.style.cursor = 'pointer';\n        fillButton.onclick = () => {\n          simulateUserInput(passwordField, generatedPassword);\n          document.body.removeChild(popup);\n        };\n        popup.appendChild(fillButton);\n        \n        // Add popup to page\n        document.body.appendChild(popup);\n      }\n    );\n}\n/**\n * Shows a popup with saved credentials that can be selected for auto-fill\n * @param credentials Array of saved credential objects to display\n * @param form The HTML form element where credentials will be filled\n */\nexport function showCredentialSelectionPopup(credentials: any[], form: HTMLElement) {\n    // Create popup container\n    const popup = document.createElement('div');\n    popup.style.position = 'fixed';\n    popup.style.top = '50%';\n    popup.style.left = '50%';\n    popup.style.transform = 'translate(-50%, -50%)';\n    popup.style.backgroundColor = 'white';\n    popup.style.padding = '20px';\n    popup.style.borderRadius = '5px';\n    popup.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.3)';\n    popup.style.zIndex = '9999';\n    popup.style.display = 'flex';\n    popup.style.flexDirection = 'column';\n    popup.style.alignItems = 'center';\n    popup.style.minWidth = '300px';\n    popup.style.maxHeight = '400px';\n    popup.style.overflowY = 'auto';\n    popup.style.position = 'relative'; // For absolute positioning of close button\n\n    // Create title\n    const title = document.createElement('h3');\n    title.textContent = 'Saved Credentials';\n    title.style.marginBottom = '15px';\n    title.style.fontSize = '18px';\n    title.style.fontWeight = 'bold';\n    popup.appendChild(title);\n\n    // Create close button\n    const closeButton = document.createElement('div');\n    closeButton.textContent = '✕';\n    closeButton.style.position = 'absolute';\n    closeButton.style.top = '10px';\n    closeButton.style.right = '10px';\n    closeButton.style.cursor = 'pointer';\n    closeButton.style.fontSize = '18px';\n    closeButton.style.fontWeight = 'bold';\n    closeButton.style.color = '#000';\n    closeButton.style.backgroundColor = '#f0f0f0';\n    closeButton.style.borderRadius = '50%';\n    closeButton.style.width = '22px';\n    closeButton.style.height = '22px';\n    closeButton.style.display = 'flex';\n    closeButton.style.justifyContent = 'center';\n    closeButton.style.alignItems = 'center';\n    closeButton.style.lineHeight = '1';\n    closeButton.style.transition = 'all 0.2s ease';\n    popup.appendChild(closeButton);\n    \n    // Add hover effect for close button\n    closeButton.addEventListener('mouseover', () => {\n        closeButton.style.color = '#000';\n    });\n    \n    closeButton.addEventListener('mouseout', () => {\n        closeButton.style.color = '#555';\n    });\n    \n    closeButton.addEventListener('click', () => {\n        if (document.body.contains(popup)) {\n            document.body.removeChild(popup);\n        }\n    });\n\n    // Create credentials list\n    credentials.forEach(cred => {\n        const credContainer = document.createElement('div');\n        credContainer.style.width = '100%';\n        credContainer.style.marginBottom = '10px';\n        credContainer.style.padding = '10px';\n        credContainer.style.backgroundColor = '#f5f5f5';\n        credContainer.style.borderRadius = '4px';\n        credContainer.style.border = '1px solid #ddd';\n        \n        // Username/email\n        const usernameInfo = document.createElement('div');\n        usernameInfo.style.marginBottom = '8px';\n        usernameInfo.style.fontSize = '14px';\n        usernameInfo.innerHTML = `<strong>Username:</strong> ${cred.username || '[empty]'}`;\n        credContainer.appendChild(usernameInfo);\n        \n        // Password (masked)\n        const passwordInfo = document.createElement('div');\n        passwordInfo.style.fontSize = '14px';\n        passwordInfo.innerHTML = `<strong>Password:</strong> ${'•'.repeat(Math.min(cred.password.length, 8))}`;\n        credContainer.appendChild(passwordInfo);\n        \n        // Auto-fill button\n        const fillButton = document.createElement('button');\n        fillButton.textContent = 'Auto-fill';\n        fillButton.style.marginTop = '8px';\n        fillButton.style.padding = '5px 10px';\n        fillButton.style.backgroundColor = '#4285F4';\n        fillButton.style.border = 'none';\n        fillButton.style.borderRadius = '4px';\n        fillButton.style.color = 'white';\n        fillButton.style.cursor = 'pointer';\n        fillButton.style.transition = 'all 0.2s ease';\n        \n        // Add hover effects for better UX\n        fillButton.addEventListener('mouseover', () => {\n            fillButton.style.backgroundColor = '#3367D6';\n        });\n        \n        fillButton.addEventListener('mouseout', () => {\n            fillButton.style.backgroundColor = '#4285F4';\n            fillButton.style.transform = 'scale(1)';\n        });\n        \n        fillButton.addEventListener('mousedown', () => {\n            fillButton.style.backgroundColor = '#2A56C6';\n            fillButton.style.transform = 'scale(0.95)';\n        });\n        \n        fillButton.onclick = () => {\n            autofillCredentials(form, cred.username, cred.password);\n            if (document.body.contains(popup)) {\n                document.body.removeChild(popup);\n            }\n        };\n        credContainer.appendChild(fillButton);\n        \n        popup.appendChild(credContainer);\n    });\n\n    // Add popup to page\n    document.body.appendChild(popup);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {showConfirmationPopup, showPasswordSuggestionPopup, showCredentialSelectionPopup} from './popup_utils';\n\n// Function to log form detection\nfunction logFormDetection(formType: string): void {\n    console.log(`${formType} form detected!!!`);\n}\n\n// Function to check if an element is a login form with improved accuracy\nfunction isLoginForm(elem: HTMLElement): boolean {\n    // Check for password field - essential for login forms\n    const hasPassword = elem.querySelector('input[type=\"password\"], input[name*=\"pass\"], input[id*=\"pass\"]');\n    if (!hasPassword) return false;\n    \n    // Expanded check for username/user ID/email fields with more variations\n    const userIdentifierSelectors = [\n        // Username selectors\n        'input[type=\"text\"][name*=\"user\" i]', 'input[id*=\"user\" i]', 'input[placeholder*=\"user\" i]',\n        // User ID selectors\n        'input[type=\"text\"][name*=\"userid\" i]', 'input[id*=\"userid\" i]', 'input[placeholder*=\"userid\" i]',\n        'input[type=\"text\"][name*=\"user_id\" i]', 'input[id*=\"user_id\" i]', 'input[placeholder*=\"user_id\" i]',\n        'input[type=\"text\"][name*=\"user-id\" i]', 'input[id*=\"user-id\" i]', 'input[placeholder*=\"user-id\" i]',\n        'input[type=\"text\"][name*=\"id\" i]', 'input[id*=\"id\" i]', 'input[placeholder*=\"id\" i]',\n        // Account selectors\n        'input[type=\"text\"][name*=\"account\" i]', 'input[id*=\"account\" i]', 'input[placeholder*=\"account\" i]',\n        // Login selectors\n        'input[type=\"text\"][name*=\"login\" i]', 'input[id*=\"login\" i]', 'input[placeholder*=\"login\" i]',\n        // Email selectors\n        'input[type=\"email\"]', 'input[name*=\"email\" i]', 'input[id*=\"email\" i]', 'input[placeholder*=\"email\" i]'\n    ];\n    \n    // Check for any user identifier field\n    const hasUserIdentifier = userIdentifierSelectors.some(selector => elem.querySelector(selector) !== null);\n    \n    // Check for labels that might indicate user ID fields\n    const hasUserIdLabel = Array.from(elem.querySelectorAll('label')).some(label => {\n        const labelText = label.textContent?.toLowerCase().trim() || '';\n        return labelText.includes('user id') || \n               labelText.includes('userid') || \n               labelText.includes('user-id') || \n               labelText.includes('user_id') || \n               labelText.includes('id') || \n               labelText === 'id';\n    });\n    \n    // Check for login-specific buttons or text indicating this is a login (not signup) form\n    const loginButtonTexts = [\"log in\", \"sign in\", \"login\", \"signin\", \"authenticate\", \"continue\", \"submit\", \"go\"];\n    const signupButtonTexts = [\"sign up\", \"signup\", \"register\", \"create account\", \"join now\", \"get started\"];\n    \n    // Find all buttons and submit inputs\n    const buttons = Array.from(elem.querySelectorAll('button, input[type=\"submit\"], a.btn, a[role=\"button\"]'));\n    \n    // Check if there are login buttons\n    const hasLoginButton = buttons.some((button) => {\n        const buttonText = button.textContent?.toLowerCase().trim() || '';\n        const buttonValue = (button as HTMLInputElement).value?.toLowerCase().trim() || '';\n        const buttonId = button.id?.toLowerCase() || '';\n        const buttonClass = button.className?.toLowerCase() || '';\n        \n        return loginButtonTexts.some(text => \n            buttonText.includes(text) || \n            buttonValue.includes(text) || \n            buttonId.includes(text) || \n            buttonClass.includes(text)\n        );\n    });\n    \n    // Check if this is actually a signup form (to exclude it)\n    const isSignupForm = buttons.some((button) => {\n        const buttonText = button.textContent?.toLowerCase().trim() || '';\n        const buttonValue = (button as HTMLInputElement).value?.toLowerCase().trim() || '';\n        return signupButtonTexts.some(text => buttonText.includes(text) || buttonValue.includes(text));\n    });\n    \n    // Check for signup-related fields\n    const hasSignupFields = \n        elem.querySelector('input[name*=\"confirm\" i]') !== null || // Confirm password\n        elem.querySelector('input[placeholder*=\"confirm\" i]') !== null ||\n        elem.querySelector('input[name*=\"signup\" i]') !== null ||\n        elem.querySelector('input[name*=\"sign-up\" i]') !== null;\n    \n    // Check for search-related attributes to exclude search bars\n    const isSearchForm = \n        elem.getAttribute('role') === 'search' || \n        elem.id?.toLowerCase().includes('search') || \n        elem.className?.toLowerCase().includes('search') ||\n        elem.querySelector('input[type=\"search\"]') !== null ||\n        elem.querySelector('input[name*=\"search\" i]') !== null ||\n        elem.querySelector('input[placeholder*=\"search\" i]') !== null;\n    \n    // Additional check for form action or ID that contains login-related terms\n    const formAction = elem.getAttribute('action')?.toLowerCase() || '';\n    const formId = elem.id?.toLowerCase() || '';\n    const formClass = elem.className?.toLowerCase() || '';\n    const formMethod = elem.getAttribute('method')?.toLowerCase() || '';\n    \n    const hasLoginIdentifier = \n        formAction.includes('login') || \n        formAction.includes('signin') || \n        formAction.includes('auth') ||\n        formId.includes('login') || \n        formId.includes('signin') ||\n        formId.includes('auth') ||\n        formClass.includes('login') ||\n        formClass.includes('signin') ||\n        formClass.includes('auth');\n        \n    // Check if the form has a title or legend indicating login\n    const hasLoginTitle = Array.from(elem.querySelectorAll('h1, h2, h3, h4, h5, h6, legend')).some(heading => {\n        const headingText = heading.textContent?.toLowerCase().trim() || '';\n        return headingText.includes('login') || \n               headingText.includes('sign in') || \n               headingText.includes('log in') ||\n               headingText.includes('authenticate');\n    });\n    \n    // If it has login indicators and is not a signup form or search form\n    return (hasPassword && \n           (hasUserIdentifier || hasUserIdLabel || hasLoginButton || hasLoginIdentifier || hasLoginTitle) && \n           !isSignupForm && \n           !hasSignupFields && \n           !isSearchForm);\n}\n\n// NEW FUNCTION: Check if an element is a signup form\nfunction isSignupForm(elem: HTMLElement): boolean {\n    // Check for password field - essential for signup forms\n    const hasPassword = elem.querySelector('input[type=\"password\"], input[name*=\"pass\"], input[id*=\"pass\"]');\n    if (!hasPassword) return false;\n    \n    // Check for signup-specific buttons or text\n    const signupButtonTexts = [\"sign up\", \"signup\", \"register\", \"create account\", \"join now\", \"get started\", \"create\"];\n    \n    // Find all buttons and submit inputs\n    const buttons = Array.from(elem.querySelectorAll('button, input[type=\"submit\"], a.btn, a[role=\"button\"]'));\n    \n    // Check if there are signup buttons\n    const hasSignupButton = buttons.some((button) => {\n        const buttonText = button.textContent?.toLowerCase().trim() || '';\n        const buttonValue = (button as HTMLInputElement).value?.toLowerCase().trim() || '';\n        const buttonId = button.id?.toLowerCase() || '';\n        const buttonClass = button.className?.toLowerCase() || '';\n        \n        return signupButtonTexts.some(text => \n            buttonText.includes(text) || \n            buttonValue.includes(text) || \n            buttonId.includes(text) || \n            buttonClass.includes(text)\n        );\n    });\n    \n    // Check for signup-related fields\n    const hasSignupFields = \n        elem.querySelector('input[name*=\"confirm\" i]') !== null || // Confirm password\n        elem.querySelector('input[placeholder*=\"confirm\" i]') !== null ||\n        elem.querySelector('input[name*=\"signup\" i]') !== null ||\n        elem.querySelector('input[name*=\"sign-up\" i]') !== null ||\n        elem.querySelector('input[name*=\"register\" i]') !== null;\n    \n    // Check for search-related attributes to exclude search bars\n    const isSearchForm = \n        elem.getAttribute('role') === 'search' || \n        elem.id?.toLowerCase().includes('search') || \n        elem.className?.toLowerCase().includes('search') ||\n        elem.querySelector('input[type=\"search\"]') !== null ||\n        elem.querySelector('input[name*=\"search\" i]') !== null ||\n        elem.querySelector('input[placeholder*=\"search\" i]') !== null;\n    \n    // Additional check for form action or ID that contains signup-related terms\n    const formAction = elem.getAttribute('action')?.toLowerCase() || '';\n    const formId = elem.id?.toLowerCase() || '';\n    const formClass = elem.className?.toLowerCase() || '';\n    \n    const hasSignupIdentifier = \n        formAction.includes('signup') || \n        formAction.includes('register') || \n        formAction.includes('create') ||\n        formId.includes('signup') || \n        formId.includes('register') ||\n        formId.includes('create') ||\n        formClass.includes('signup') ||\n        formClass.includes('register') ||\n        formClass.includes('create');\n        \n    // Check if the form has a title or legend indicating signup\n    const hasSignupTitle = Array.from(elem.querySelectorAll('h1, h2, h3, h4, h5, h6, legend')).some(heading => {\n        const headingText = heading.textContent?.toLowerCase().trim() || '';\n        return headingText.includes('sign up') || \n               headingText.includes('signup') || \n               headingText.includes('register') ||\n               headingText.includes('create account') ||\n               headingText.includes('join');\n    });\n    \n    // If it has signup indicators and is not a search form\n    return (hasPassword && \n           (hasSignupButton || hasSignupFields || hasSignupIdentifier || hasSignupTitle) && \n           !isSearchForm);\n}\n\n// Updated function to handle login forms\nfunction handleLoginForm(elem: HTMLElement) {\n    logFormDetection(\"Login form\");\n    \n    // Check if user is logged in by attempting to retrieve credentials\n    retrieveSavedCredentials((credentials) => {\n      if (credentials && credentials.length > 0) {\n        // User is logged in and we have credentials - show selection popup\n        showCredentialSelectionPopup(credentials, elem);\n      }\n      else{\n        setupPasswordFieldListener(elem);\n      }\n    });\n  }\n\n// New function to retrieve saved credentials for the current site\nfunction retrieveSavedCredentials(callback: (credentials: any[] | null) => void) {\n    const currentSite = window.location.hostname;\n\n    chrome.runtime.sendMessage(\n        { action: \"getCredentials\", site: currentSite },\n        (response) => {\n        if (response?.success && response.credentials) {\n            callback(response.credentials);\n        } else {\n            console.error(\"Failed to retrieve credentials:\", response?.error);\n            callback(null);\n        }\n        }\n    );\n}\n  \n// Add password field click listener for signup forms\nfunction setupPasswordFieldListener(form: HTMLElement) {\nconst passwordFields = form.querySelectorAll('input[type=\"password\"]');\n\npasswordFields.forEach((field) => {\n    const inputField = field as HTMLInputElement;\n    if (inputField.dataset.listenerAdded !== 'true') {\n        inputField.addEventListener('click', () => {\n        showPasswordSuggestionPopup(inputField);\n        });\n        inputField.dataset.listenerAdded = 'true';\n    }\n    });\n}\n\n// Function to check if all required form inputs are filled\nfunction areAllRequiredInputsFilled(form: HTMLElement): boolean {\n    const requiredInputs = form.querySelectorAll('input[required], select[required], textarea[required]');\n    \n    // If there are no required inputs, check visible inputs instead\n    if (requiredInputs.length === 0) {\n        const visibleInputs = Array.from(form.querySelectorAll('input, select, textarea')).filter(input => {\n            // Cast the input to a union type\n            const element = input as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n            const style = window.getComputedStyle(element);\n            return style.display !== 'none' && \n                   style.visibility !== 'hidden' && \n                   element.type !== 'hidden' && \n                   element.type !== 'submit' && \n                   element.type !== 'button';\n        });\n        \n        return visibleInputs.every(element => {\n            // Ensure the element is of the correct type\n            if (isInputElement(element)) {\n                return element.value.trim() !== '';\n            }\n            return false;\n        });\n    }\n    \n    // Check if all required inputs are filled\n    return Array.from(requiredInputs).every(input => {\n        // Cast the input to a union type\n        const element = input as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n        if (isInputElement(element)) {\n            return element.value.trim() !== '';\n        }\n        return false;\n    });\n}\n\n// Type guard to check if an element is HTMLInputElement, HTMLSelectElement, or HTMLTextAreaElement\nfunction isInputElement(element: Element): element is HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement {\n    return element instanceof HTMLInputElement || \n           element instanceof HTMLSelectElement || \n           element instanceof HTMLTextAreaElement;\n}\n\n// Function to set up submit handlers for signup forms\nfunction setupSignupFormSubmitHandler(form: HTMLElement) {\n    // Flag to prevent multiple event handlers\n    if (form.dataset.submitHandlerAttached === 'true') {\n        return;\n    }\n    form.dataset.submitHandlerAttached = 'true';\n    \n    // Find all submit buttons and add click handlers\n    const submitButtons = form.querySelectorAll('button[type=\"submit\"], input[type=\"submit\"], button:not([type]), [role=\"button\"]');\n    \n    submitButtons.forEach(button => {\n        button.addEventListener('click', function(event) {\n            // Only intercept if all required fields are filled\n            if (areAllRequiredInputsFilled(form)) {\n                // Prevent default form submission\n                event.preventDefault();\n                event.stopPropagation();\n                \n                // Show confirmation popup\n                showConfirmationPopup(form,(confirmed) => {\n                    if (confirmed) {\n                        console.log(\"Password saved\");\n                    } else {\n                        console.log(\"Password not saved\");\n                    }\n                });\n            }\n        });\n    });\n    \n    // For extra reliability, also attach to form submit event\n    if (form.tagName === 'FORM') {\n        form.addEventListener('submit', function(event) {\n            // Only intercept if all required fields are filled\n            if (areAllRequiredInputsFilled(form)) {\n                // Prevent default form submission\n                event.preventDefault();\n                event.stopPropagation();\n                \n                // Show confirmation popup\n                showConfirmationPopup(form, (confirmed) => {\n                    if (confirmed) {\n                        console.log(\"Password saved\");\n                    } else {\n                        console.log(\"Password not saved\");\n                    }\n                });\n            }\n        });\n    }\n}\n\n// Function to detect and process forms in the DOM\nfunction detectForm(node: Node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const elem = node as HTMLElement;\n      \n      // Check if element is a form\n      if (elem.tagName === 'FORM') {\n        if (isLoginForm(elem)) {\n          handleLoginForm(elem);\n        } else if (isSignupForm(elem)) {\n          logFormDetection(\"Signup form\");\n          setupSignupFormSubmitHandler(elem);\n          setupPasswordFieldListener(elem);\n        }\n      } \n      // Also check for containers that might not use the form tag\n      else if (elem.querySelector('input[type=\"password\"]')) {\n        if (isLoginForm(elem)) {\n          handleLoginForm(elem);\n        } else if (isSignupForm(elem)) {\n          logFormDetection(\"Signup container\");\n          setupSignupFormSubmitHandler(elem);\n          setupPasswordFieldListener(elem);\n        }\n      }\n    }\n  }\n\n// Debounce function to limit rapid execution of MutationObserver callbacks\nfunction debounce(func: Function, delay: number) {\n    let timeout: ReturnType<typeof setTimeout>;\n    return (...args: any[]) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func(...args), delay);\n    };\n}\n\n// Create a MutationObserver to detect new forms dynamically added to the DOM\nconst observer = new MutationObserver(\n    debounce((mutations: MutationRecord[]) => {\n        mutations.forEach((mutation) => {\n            if (mutation.addedNodes.length > 0) {\n                mutation.addedNodes.forEach(detectForm); // Check newly added elements\n            } else if (mutation.target.nodeType === Node.ELEMENT_NODE) {\n                detectForm(mutation.target); // Check modified elements\n            }\n        });\n    }, 100) // Debounce delay of 100ms to optimize performance\n);\n\n// Function to start observing DOM changes\nfunction observe() {\n    observer.observe(document, {\n        attributes: true, // Watch for attribute changes that might reveal forms\n        attributeFilter: ['class', 'style', 'hidden'], // Only watch relevant attributes\n        characterData: false, // Ignore text changes\n        childList: true, // Watch for added/removed nodes\n        subtree: true, // Watch the entire DOM tree\n    });\n\n    // Process all potential forms when the script runs\n    document.querySelectorAll(\"form\").forEach(detectForm);\n    \n    // Also check for non-form containers\n    document.querySelectorAll(\"div, section, main, fieldset\").forEach(elem => {\n        if (elem.querySelector('input[type=\"password\"]')) {\n            detectForm(elem);\n        }\n    });\n}\n\n// Start monitoring the DOM for forms\nobserve();"],"names":["enabled","text","chrome","action","setBadgeText","input","value","disabled","readOnly","nativeInputValueSetter","Object","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","set","call","forEach","eventType","event","KeyboardEvent","bubbles","cancelable","key","Event","dispatchEvent","focus","setTimeout","blur","form","site","location","hostname","passwordInput","querySelector","password","username","userIdentifierSelectors","selector","timestamp","Date","toISOString","simulateUserInput","callback","credentials","collectCredentials","popup","document","createElement","style","position","top","left","transform","backgroundColor","padding","borderRadius","boxShadow","zIndex","display","flexDirection","alignItems","minWidth","closeButton","textContent","right","cursor","fontSize","fontWeight","color","width","height","justifyContent","lineHeight","transition","appendChild","addEventListener","closePopupAndResume","confirmed","body","contains","removeChild","title","marginBottom","credentialsContainer","border","siteInfo","innerHTML","usernameInfo","passwordInfo","repeat","length","buttonContainer","gap","statusMessage","marginTop","textAlign","yesButton","noButton","pointerEvents","runtime","sendMessage","data","response","console","log","success","message","passwordField","error","generatedPassword","getBoundingClientRect","bottom","scrollY","scrollX","onclick","passwordBox","fontFamily","wordBreak","fillButton","maxHeight","overflowY","cred","credContainer","Math","min","autofillCredentials","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","logFormDetection","formType","isLoginForm","elem","hasPassword","hasUserIdentifier","some","hasUserIdLabel","Array","from","querySelectorAll","label","labelText","toLowerCase","trim","includes","loginButtonTexts","signupButtonTexts","buttons","hasLoginButton","button","buttonText","buttonValue","buttonId","id","buttonClass","className","isSignupForm","hasSignupFields","isSearchForm","getAttribute","formAction","formId","formClass","hasLoginIdentifier","hasLoginTitle","heading","headingText","hasSignupButton","hasSignupIdentifier","hasSignupTitle","handleLoginForm","currentSite","retrieveSavedCredentials","showCredentialSelectionPopup","setupPasswordFieldListener","field","inputField","dataset","listenerAdded","showPasswordSuggestionPopup","areAllRequiredInputsFilled","requiredInputs","filter","element","getComputedStyle","visibility","type","every","isInputElement","HTMLSelectElement","HTMLTextAreaElement","setupSignupFormSubmitHandler","submitHandlerAttached","preventDefault","stopPropagation","showConfirmationPopup","tagName","detectForm","node","nodeType","Node","ELEMENT_NODE","MutationObserver","timeout","args","clearTimeout","mutations","mutation","addedNodes","target","func","debounce","observe","attributes","attributeFilter","characterData","childList","subtree"],"sourceRoot":""}